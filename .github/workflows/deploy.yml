name: Build and Deploy to K3s

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          docker.io/komarovai/service.moscow:latest
          docker.io/komarovai/service.moscow:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: 'v1.28.0'

    - name: Setup kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG_BASE64 }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Verify cluster connection
      run: |
        kubectl cluster-info
        kubectl get nodes

    - name: Deploy to K3s cluster
      run: |
        # Create namespace
        kubectl apply -f k8s/namespace.yaml
        
        # Create Docker Hub registry secret
        kubectl -n service-moscow create secret docker-registry dockerhub-creds \
          --docker-server=docker.io \
          --docker-username="${{ secrets.DOCKERHUB_USERNAME }}" \
          --docker-password="${{ secrets.DOCKERHUB_TOKEN }}" \
          --dry-run=client -o yaml | kubectl apply -f -
        
        # Apply all Kubernetes manifests
        kubectl apply -f k8s/
        
        # Update deployment with new image SHA
        kubectl -n service-moscow set image deployment/service-moscow \
          web=docker.io/komarovai/service.moscow:${{ github.sha }} \
          --record
        
        # Wait for rollout to complete
        kubectl rollout status deployment/service-moscow -n service-moscow --timeout=300s
        
        # Show deployment status
        echo "=== Deployment Status ==="
        kubectl -n service-moscow get pods,svc,ingress
        
        echo "=== Recent Pod Events ==="
        kubectl -n service-moscow get events --sort-by='.lastTimestamp' --field-selector type!=Normal | tail -5 || true

    - name: Verify deployment
      run: |
        # Check if pods are ready
        kubectl -n service-moscow wait --for=condition=ready pod -l app=service-moscow --timeout=120s
        
        # Get pod logs
        echo "=== Application Logs ==="
        kubectl -n service-moscow logs -l app=service-moscow --tail=10
        
        echo "=== Ingress Status ==="
        kubectl -n service-moscow describe ingress service-moscow